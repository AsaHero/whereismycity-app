name: ci/cd

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [23.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          if_key_exists: replace

      - name: Deploy to Ubuntu Server
        env:
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          # Ensure proper permissions
          chmod -R 755 dist/

          # Create a tar of the dist directory
          tar -czf dist.tar.gz dist/

          # Ensure the tar file is readable
          chmod 644 dist.tar.gz

          tar -czf dist.tar.gz dist/

          # Copy the tar to the server
          scp dist.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_PATH }}

          # SSH into the server, extract the files, and set up the deployment
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            cd ${{ secrets.DEPLOY_PATH }} && \
            rm -rf current && \
            tar -xzf dist.tar.gz && \
            rm dist.tar.gz && \
            mv dist current && \
            sudo systemctl reload nginx
          "
